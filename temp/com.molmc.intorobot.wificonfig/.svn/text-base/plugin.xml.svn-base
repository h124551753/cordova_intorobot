<?xml version="1.0" encoding="UTF-8"?>
<!--插件id号，与package.json保持一致 版本号，与package.json保持一致-->
<plugin xmlns="http://apache.org/cordova/ns/plugins/1.0"
        id="com.molmc.intorobot.wificonfig" version="0.1">
    <!--插件在cordova下的名称，Test.js中exec的接口名称，保持一致-->
    <name>WifiConfig</name>
    <description>Cordova Wificonfigure Plugin</description>
    <license>Apache 2.0</license>
    <!--与package.json保持一致-->
    <keywords></keywords>
    <repo></repo>
    <issue></issue>
    <!--插件js接口文件配置信息，插件在android-->
    <!--src="www/Test.js"为已经写好的js文件路径，与js中调用的类名保持一致-->
    <js-module src="www/WifiConfig.js" name="WifiConfig">
        <!--插件在js中调用的类名-->
        <merges target="navigator.wificonfig" />
    </js-module>

    <!-- android -->
    <platform name="android">
        <config-file target="res/xml/config.xml" parent="/*">
            <!--插件在java端的接口名称，与之前文件中的接口名称保持一致-->
            <feature name="WifiConfig">
                <!--该插件接口对应的java代码路径-->
                <param name="android-package" value="com.molmc.intorobot.wificonfig.WifiConfig"/>
            </feature>
        </config-file>

        <!--该插件需要的权限申明,根据需要自行定义-->
        <config-file target="AndroidManifest.xml" parent="/*">
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
            <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
            <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
        </config-file>

        <!--源文件的路径和目标文件路径，src为已经编写好的java代码路径，target-dir为需要生成的android工程中该java源码路径，与上面的java代码路径保持一致-->
        <source-file src="src/android/WifiConfig.java" target-dir="src/com/molmc/intorobot/wificonfig"/>
        <source-file src="src/android/WifiUtils.java" target-dir="src/com/molmc/intorobot/wificonfig"/>
        <source-file src="src/android/WifiTcp.java" target-dir="src/com/molmc/intorobot/wificonfig"/>

    </platform>

</plugin>

